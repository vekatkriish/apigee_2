pipeline {
    agent any 

    stages {
        stage('SCM'){
            steps {
                script{
                    git changelog: false, credentialsId: '46d318e0-7de7-49ab-86ae-1669225823c1', poll: false, url: 'https://github.com/vekatkriish/apigee_2.git'
                }
            }
            
        }
        stage('GIT_BRANCHCReation'){
            when {    
                    expression { env.branch2 == 'noMerge' }
                }
            steps {
                
                script{
    		        dir('RallyBuild'){
                        def props = readProperties  file:'rally.properties'
                        def giturl= props['git_url']
                        def gitrepo= props['git_repo']
                        def gituser = props['git_username']
                        def gitpass = props['git_password']

                        sh "chmod +x ../scripts/gitutils.sh"
                        sh "../scripts/gitutils.sh createBranch ${giturl} ${gituser} ${gitpass} ${gitrepo} ${branch1}"
                    }
     
    		    }
            }
        }
        stage('GIT_MERGE') { 
            when { 
                    expression { env.branch2 != 'noMerge' }
                }
            steps { 
                
                script{
    		        dir('RallyBuild'){
                        def props = readProperties  file:'rally.properties'
                        def giturl= props['git_url']
                        def gituser = props['git_username']
                        def gitpass = props['git_password']
                        def gitrepo= props['git_repo']

                        sh "chmod +x ../scripts/gitutils.sh"
                        sh "../scripts/gitutils.sh merge ${giturl} ${gituser} ${gitpass} ${gitrepo} ${branch1} ${branch2}"
                    } 
                }
            }
        }
    }

    post {
            success {
                script{
                    def sub = ''
                    def emailBody = 'Please visit '+env.BUILD_URL+' for more details.'
                    dir ('RallyBuild') {
                        sh 'python updateTask.py $fmtId ' + env.notes + ' $BUILD_URL'
                    }
                    if(env.branch2 == 'noMerge'){
                        sub = 'Job creating branch ' + env.JOB_NAME+' with build no '+env.BUILD_NUMBER+' is sucesses'
                    }else if(env.branch2 != 'noMerge'){
                        sub = 'Job merging branch ' + env.JOB_NAME+' with build no '+env.BUILD_NUMBER+' is sucesses'
                    }
                    mail (to: env.notes.split(';')[0].trim(), subject: sub, body: emailBody);
                    deleteDir()
                }
            }
            failure {
                echo 'failed build'
                deleteDir()
            }
    }
}
